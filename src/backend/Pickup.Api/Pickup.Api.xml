<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Pickup.Api</name>
    </assembly>
    <members>
        <member name="M:Pickup.Api.Controllers.V1.Identity.AuthController.ConfirmEmailAsync(Pickup.Core.Models.V1.Request.Identity.ConfirmEmailRequest)">
            <summary>
            Confirms a user email address
            </summary>
            <param name="request">ConfirmEmailRequest</param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Controllers.V1.Identity.AuthController.ForgotPasswordAsync(Pickup.Core.Models.V1.Request.Identity.ForgotPasswordRequest)">
            <summary>
            Forgot email sends an email with a link containing reset token
            </summary>
            <param name="request">ForgotPasswordRequest</param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Controllers.V1.Identity.AuthController.LoginAsync(Pickup.Core.Models.V1.Request.Identity.LoginRequest)">
            <summary>
            Log into account
            </summary>
            <param name="request">LoginRequest</param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Controllers.V1.Identity.AuthController.LoginWith2faAsync(Pickup.Core.Models.V1.Request.Identity.LoginWith2faRequest)">
            <summary>
            Log in with TFA 
            </summary>
            <param name="request">LoginWith2faRequest</param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Controllers.V1.Identity.AuthController.RegisterAsync(Pickup.Core.Models.V1.Request.Identity.RegisterRequest)">
            <summary>
            Register an account
            </summary>
            <param name="request">RegisterRequest</param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Controllers.V1.Identity.AuthController.ResendVerificationEmail(Pickup.Core.Models.V1.Request.Identity.ResendVerificationEmailRequest)">
            <summary>
            Resend email verification email with token link
            </summary>
            <param name="request">ResendVerificationEmailRequest</param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Controllers.V1.Identity.AuthController.ResetPassword(Pickup.Core.Models.V1.Request.Identity.ResetPasswordRequest)">
            <summary>
            Reset account password with reset token
            </summary>
            <param name="request">ReSetPasswordRequest</param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Controllers.V1.Identity.ManageController.UserInfo">
            <summary>
            Get user information
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Controllers.V1.Identity.ManageController.TwoFactorAuthentication">
            <summary>
            Get TFA stats
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Controllers.V1.Identity.ManageController.EnableAuthenticator">
            <summary>
            https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes
            http://jakeydocs.readthedocs.io/en/latest/security/authentication/2fa.html#log-in-with-two-factor-authentication
            </summary>
            <returns>QR Code</returns>
        </member>
        <member name="M:Pickup.Api.Controllers.V1.Identity.ManageController.ChangePassword(Pickup.Core.Models.V1.Request.Identity.ChangePasswordRequest)">
            <summary>
            Change password for authenticated user
            </summary>
            <param name="model">ChangePasswordRequest</param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Controllers.V1.Identity.ManageController.SendVerificationEmail">
            <summary>
            Send email verification email
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Controllers.V1.Identity.ManageController.SetPassword(Pickup.Core.Models.V1.Request.Identity.SetPasswordRequest)">
            <summary>
            Set a password if the user doesn't have one already
            </summary>
            <param name="model">SetPasswordRequest</param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Controllers.V1.Identity.ManageController.Disable2fa">
            <summary>
            Disable TFA
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Controllers.V1.Identity.ManageController.EnableAuthenticator(Pickup.Core.Models.V1.Response.Identity.EnableAuthenticatorResponse)">
            <summary>
            Enable TFA (requires QR code)
            </summary>
            <param name="model">EnableAuthenticatorResponse</param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Controllers.V1.Identity.ManageController.ResetAuthenticator">
            <summary>
            Reset TFA (This will reset and disable TFA)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Controllers.V1.Identity.ManageController.GenerateRecoveryCodes">
            <summary>
            Generate new recovery codes (This will invalidate previous codes)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Controllers.V1.Identity.RoleController.Get">
            <summary>
            Get all roles
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Controllers.V1.Identity.RoleController.Post(Pickup.Core.Models.V1.Request.Identity.RoleRequest)">
            <summary>
            Insert a role
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Controllers.V1.Identity.RoleController.Put(System.Int32,Pickup.Core.Models.V1.Request.Identity.RoleRequest)">
            <summary>
            Update a role
            </summary>
            <param name="Id">Role Id</param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Controllers.V1.Identity.RoleController.Delete(System.String)">
            <summary>
            Delete a role
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Controllers.V1.Identity.UserController.Get">
            <summary>
            Get all users
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Controllers.V1.Identity.UserController.Get(System.String)">
            <summary>
            Get a user
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Controllers.V1.Identity.UserController.Post(Pickup.Core.Models.V1.Request.Identity.CreateUserRequest)">
            <summary>
            Insert a user with an existing role
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Controllers.V1.Identity.UserController.Put(System.String,Pickup.Core.Models.V1.Request.Identity.EditUserRequest)">
            <summary>
            Update a user
            </summary>
            <param name="Id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Controllers.V1.Identity.UserController.Delete(System.String)">
            <summary>
            Delete a user (Will also delete link to roles)
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Controllers.V1.Identity.UserRolesController.Get(System.String)">
            <summary>
            Get a user roles
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Controllers.V1.Identity.UserRolesController.Post(Pickup.Core.Models.V1.Request.Identity.CreateUserRequest)">
            <summary>
            Add a user to existing role
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Controllers.V1.Identity.UserRolesController.Delete(System.String,System.String)">
            <summary>
            Delete a user from an existing role
            </summary>
            <param name="Id"></param>
            <param name="RoleId"></param>
            <returns></returns>
        </member>
    </members>
</doc>
