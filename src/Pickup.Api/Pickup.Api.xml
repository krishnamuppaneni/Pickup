<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Pickup.Api</name>
    </assembly>
    <members>
        <member name="M:Pickup.Api.Identity.Controllers.AuthController.ConfirmEmail(Pickup.Api.Identity.Models.ConfirmEmailModel)">
            <summary>
            Confirms a user email address
            </summary>
            <param name="model">ConfirmEmailModel</param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Identity.Controllers.AuthController.Register(Pickup.Api.Identity.Models.RegisterModel)">
            <summary>
            Register an account
            </summary>
            <param name="model">RegisterModel</param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Identity.Controllers.AuthController.CreateToken(Pickup.Api.Identity.Models.LoginModel)">
            <summary>
            Log into account
            </summary>
            <param name="model">LoginModel</param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Identity.Controllers.AuthController.LoginWith2fa(Pickup.Api.Identity.Models.LoginWith2faModel)">
            <summary>
            Log in with TFA 
            </summary>
            <param name="model">LoginWith2faModel</param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Identity.Controllers.AuthController.ForgotPassword(Pickup.Api.Identity.Models.ForgotPasswordModel)">
            <summary>
            Forgot email sends an email with a link containing reset token
            </summary>
            <param name="model">ForgotPasswordModel</param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Identity.Controllers.AuthController.ResetPassword(Pickup.Api.Identity.Models.ResetPasswordModel)">
            <summary>
            Reset account password with reset token
            </summary>
            <param name="model">ResetPasswordModel</param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Identity.Controllers.AuthController.ResendVerificationEmail(Pickup.Api.Identity.Models.ResendVerificationEmailModel)">
            <summary>
            Resend email verification email with token link
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Identity.Controllers.ManageController.UserInfo">
            <summary>
            Get user information
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Identity.Controllers.ManageController.TwoFactorAuthentication">
            <summary>
            Get TFA stats
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Identity.Controllers.ManageController.EnableAuthenticator">
            <summary>
            https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes
            http://jakeydocs.readthedocs.io/en/latest/security/authentication/2fa.html#log-in-with-two-factor-authentication
            </summary>
            <returns>QR Code</returns>
        </member>
        <member name="M:Pickup.Api.Identity.Controllers.ManageController.ChangePassword(Pickup.Api.Identity.Models.ChangePasswordModel)">
            <summary>
            Change password for authenticated user
            </summary>
            <param name="model">ChangePasswordModel</param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Identity.Controllers.ManageController.SendVerificationEmail">
            <summary>
            Send email verification email
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Identity.Controllers.ManageController.SetPassword(Pickup.Api.Identity.Models.SetPasswordModel)">
            <summary>
            Set a password if the user doesn't have one already
            </summary>
            <param name="model">SetPasswordModel</param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Identity.Controllers.ManageController.Disable2fa">
            <summary>
            Disable TFA
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Identity.Controllers.ManageController.EnableAuthenticator(Pickup.Api.Identity.Models.EnableAuthenticatorModel)">
            <summary>
            Enable TFA (requires QR code)
            </summary>
            <param name="model">EnableAuthenticatorModel</param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Identity.Controllers.ManageController.ResetAuthenticator">
            <summary>
            Reset TFA (This will reset and disable TFA)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Identity.Controllers.ManageController.GenerateRecoveryCodes">
            <summary>
            Generate new recovery codes (This will invalidate previous codes)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Identity.Controllers.RoleController.Get">
            <summary>
            Get all roles
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Identity.Controllers.RoleController.Post(Pickup.Api.Identity.Models.RoleModel)">
            <summary>
            Insert a role
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Identity.Controllers.RoleController.Put(System.Int32,Pickup.Api.Identity.Models.RoleModel)">
            <summary>
            Update a role
            </summary>
            <param name="Id">Role Id</param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Identity.Controllers.RoleController.Delete(System.String)">
            <summary>
            Delete a role
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Identity.Controllers.UserController.Get">
            <summary>
            Get all users
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Identity.Controllers.UserController.Get(System.String)">
            <summary>
            Get a user
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Identity.Controllers.UserController.Post(Pickup.Api.Identity.Models.UserModel)">
            <summary>
            Insert a user with an existing role
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Identity.Controllers.UserController.Put(System.String,Pickup.Api.Identity.Models.EditUserModel)">
            <summary>
            Update a user
            </summary>
            <param name="Id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Identity.Controllers.UserController.Delete(System.String)">
            <summary>
            Delete a user (Will also delete link to roles)
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Identity.Controllers.UserRolesController.Get(System.String)">
            <summary>
            Get a user roles
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Identity.Controllers.UserRolesController.Post(Pickup.Api.Identity.Models.UserModel)">
            <summary>
            Add a user to existing role
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Pickup.Api.Identity.Controllers.UserRolesController.Delete(System.String,System.String)">
            <summary>
            Delete a user from an existing role
            </summary>
            <param name="Id"></param>
            <param name="RoleId"></param>
            <returns></returns>
        </member>
    </members>
</doc>
